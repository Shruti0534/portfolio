import { useEffect, useState } from "react";

 
const name = [
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Toings"},
    { msg: "Toings-"},
    { msg: "Toin_s-"},
    { msg: "Toin^s░"},
    { msg: "Toinls░"},
    { msg: "Toinlς░"},
    { msg: "Toinl▁"},
    { msg: "tofnl▁[▁"},
    { msg: "to∫nl▁ς▁>"},
    { msg: "to}nl▁ς[>"},
    { msg: "toænl°-[▁"},
    { msg: "to-nle∫[▁"},
    { msg: "to∫nle∫[$"},
    { msg: "░oλle∫λ$"},
    { msg: "√o∫░le∫▁$"},
    { msg: "βo∫░leς_}"},
    { msg: "βoΔβleς_░}"},
    { msg: "?oæβlef▁p▁°"},
    { msg: "?oββlef░p+β"},
    { msg: "?o▁βlef-p░Δ"},
    { msg: "?o▁le-p░Δ"},
    { msg: "#ob▁le-pps"},
    { msg: "#ob▁le-pps"},
    { msg: "#ob▁le-pps"},
    { msg: "▁obile-pps"},
    { msg: "▁obile apps"},
    { msg: "*obile apps"},
    { msg: "▒*obile apps"},
    { msg: "▒*obile apps"},
    { msg: "▒*obile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mobile apps"},
    { msg: "mo_ile apps"},
    { msg: "mo⚨i▁e^ apps"},
    { msg: "moΔi_e apps"},
    { msg: "mo⚨i▁e apps"},
    { msg: "mo⚨i▁e ^ppㅡ"},
    { msg: "mobς▁e ^ppㅡ"},
    { msg: "mob_ie<*pp+"},
    { msg: "mob?ie<*pp+"},
    { msg: "?ob#ie_#pp/"},
    { msg: "ςob#ie_#ppβ"},
    { msg: "ς_b#i__ppβ"},
    { msg: "ς_bΔit_▒pp∫"},
    { msg: "ς_b[it__pp∫"},
    { msg: "w_b[it__pp∫"},
    { msg: "w_b[it]__p{"},
    { msg: "web]ite_β_"},
    { msg: "web▒ite_-"},
    { msg: "web╂ites━"},
    { msg: "web╂ites_"},
    { msg: "websitesβ"},
    { msg: "websitesβ"},
    { msg: "websites_"},
    { msg: "websites-"},
    { msg: "websites-"},
    { msg: "websites]"},
    { msg: "websites]"},
    { msg: "websites]"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "website"},
    { msg: "websi/▒s"},
    { msg: "websi/^s"},
    { msg: "websiβ⚨s"},
    { msg: "ㅡeb_i*s"},
    { msg: "ㅡ_b_i/s"},
    { msg: "ㅡ_b_i[s"},
    { msg: "ㅡ_b_i{[s"},
    { msg: "λ_!_{©s"},
    { msg: "λ∫![]æ["},
    { msg: "+∫![▒æ"},
    { msg: "?f![▒⚨"},
    { msg: "?!β∫-#"},
    { msg: "_!ςe-#"},
    { msg: "ς=_e-∫"},
    { msg: "/▒_es+"},
    { msg: "_a_es"},
    { msg: "gaæes"},
    { msg: "gafes"},
    { msg: "gafes"},
    { msg: "gafes"},
    { msg: "ga∫es"},
    { msg: "ga∫es"},
    { msg: "ga∂es"},
    { msg: "ga∂es"},
    { msg: "ga∂es"},
    { msg: "ga∂es"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "ga∂es"},
    { msg: "ga∂es"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "games"},
    { msg: "ga∫es"},
    { msg: "gabes"},
    { msg: "g-bes"},
    { msg: "∫ςbes"},
    { msg: "_ςbe⚨©"},
    { msg: "*ςbe∂▒"},
    { msg: "*ςbe∂▒"},
    { msg: "Δ^bep▒"},
    { msg: "$^bep▒"},
    { msg: "$$bep/"},
    { msg: "$$b_pp"},
    { msg: "$_b/pp"},
    { msg: "λ_bappΔ"},
    { msg: "!ebapp_"},
    { msg: "webappλ"},
    { msg: "webappλ"},
    { msg: "webappλ"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "webapps"},
    { msg: "web*pps"},
    { msg: "w_⚨pps"},
    { msg: "we°∂>ps"},
    { msg: "we°∂{ps"},
    { msg: "we▒∂{ps"},
    { msg: "we▒u▒ps"},
    { msg: "we▒u=ps"},
    { msg: "we▒u_ps"},
    { msg: "we▒u_©s"},
    { msg: "we_u_/s"},
    { msg: "we_u_-s"},
    { msg: "we_uæ-s"},
    { msg: "we_u__s"},
    { msg: "we_u_▓="},
    { msg: "weβu_▓="},
    { msg: "w_/u_▓="},
    { msg: "w°/u∆|^"},
    { msg: "}_/u</^"},
    { msg: "⚢_/u*|-"},
    { msg: "=˙/u°/"},
    { msg: "_˙/ui/"},
    { msg: "_˙/ui_"},
    { msg: "_⌉/ui≈"},
    { msg: "_⌉/ui≈"},
    { msg: "_⌉/ui_"},
    { msg: "__/ui√"},
    { msg: "$-/ui"},
    { msg: "$-/ui"},
    { msg: "$-/ui"},
    { msg: "f-/ui"},
    { msg: "_-/ui"},
    { msg: "λx/ui"},
    { msg: "fx/ui"},
    { msg: "fx/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/ui"},
    { msg: "ux/u_"},
    { msg: "uxςu_"},
    { msg: "ςxβu?"},
    { msg: "ςx∆u{"},
    { msg: "ςx∆u{"},
    { msg: "▓x∆u_"},
    { msg: "▓_∆u__"},
    { msg: "≈_∆u_#"},
    { msg: "__t-#"},
    { msg: "#_ti_"},
    { msg: "$_ti]"},
    { msg: "_∆tio-"},
    { msg: "^^tio-"},
    { msg: "m^tio-"},
    { msg: "m^tio_"},
    { msg: "m^tion"},
    { msg: "m^tion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "motion"},
    { msg: "m*tion"},
    { msg: "__tifn"},
    { msg: "__ti˙n"},
    { msg: "▓λti˙n"},
    { msg: "^λti˙n"},
    { msg: "]λti˙n"},
    { msg: "?=ti<n"},
    { msg: "?_tiβn"},
    { msg: "˙hi^g∆"},
    { msg: "?hi^g/"},
    { msg: "ςhi!g-"},
    { msg: "^hi!g-"},
    { msg: "^hi#g-"},
    { msg: "{hi?gs"},
    { msg: "thi_gs"},
    { msg: "thi_gs"},
    { msg: "things"},
    { msg: "things"},
    { msg: "things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
    { msg: "Things"},
]

const Msg = () => {
    const [currentValue, setCurrentValue] = useState("Things");
    const [count, setcount] = useState(0);
  
    useEffect(() => {
      const int1 = setInterval(() => {
        setCurrentValue(name[count].msg)
        setcount((count + 1) % 343);
      }, 50);
      return () => {
        clearInterval(int1);
      };
    },[count]);
  
  
  
    return (
      <>
        <span>{currentValue}</span>
      </>
    );
  };
  export default Msg;
  